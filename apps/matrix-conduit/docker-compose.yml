version: "3.7"

services:
  matrix-conduit:
    container_name: matrix-conduit
    image: matrixconduit/matrix-conduit:v0.5.0
    environment:
      CONDUIT_SERVER_NAME: ${APP_DOMAIN}
      CONDUIT_DATABASE_PATH: /var/lib/matrix-conduit/
      CONDUIT_DATABASE_BACKEND: rocksdb
      CONDUIT_PORT: 6167
      CONDUIT_MAX_REQUEST_SIZE: ${MAX_REQUEST_SIZE:-20000000}
      CONDUIT_ALLOW_REGISTRATION: ${ALLOW_REGISTRATION:-false}
      CONDUIT_ALLOW_FEDERATION: ${ALLOW_FEDERATION:-false}
      CONDUIT_TRUSTED_SERVERS: ${TRUSTED_SERVERS:-[]}
      CONDUIT_LOG: ${LOG:-warn,rocket=off,_=off,sled=off}
      CONDUIT_ADDRESS: 0.0.0.0
      CONDUIT_CONFIG: "" # Ignore this
    restart: unless-stopped
    volumes:
      - ${APP_DATA_DIR}/data:/var/lib/matrix-conduit/
    networks:
      - tipi_main_network
    labels:
      traefik.enable: ${APP_EXPOSED}
      traefik.http.routers.matrix.rule: Host(`${APP_DOMAIN}`)
      traefik.http.routers.matrix.entrypoints: websecure
      traefik.http.routers.matrix.service: matrix
      traefik.http.routers.matrix.tls.certresolver: myresolver
      traefik.http.services.matrix.loadbalancer.server.port: 6167

  matrix-conduit-well-known:
    container_name: matrix-conduit-well-known
    build:
      context: nginx
      dockerfile: Dockerfile
    environment:
      APP_DOMAIN: ${APP_DOMAIN}
    restart: unless-stopped
    networks:
      - tipi_main_network
    labels:
      traefik.enable: ${APP_EXPOSED}
      traefik.http.routers.matrix-well-knows.rule: Host(`${APP_DOMAIN}`) && PathPrefix(`/.well-known/matrix`)
      traefik.http.routers.matrix-well-knows.entrypoints: websecure
      traefik.http.routers.matrix-well-knows.service: matrix-well-knows
      traefik.http.routers.matrix-well-knows.tls.certresolver: myresolver
      traefik.http.services.matrix-well-knows.loadbalancer.server.port: 80
