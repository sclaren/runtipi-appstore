version: '3.9'

services:
  postgresql:
    image: docker.io/library/postgres:12-alpine
    restart: unless-stopped
    volumes:
     - ${APP_DATA_DIR}/data/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=authentik
      - POSTGRES_DB=authentik
    networks:
      - tipi_main_network
      
  redis:
    image: redis:alpine
    command: --save 60 1 --loglevel warning
    restart: unless-stopped
    volumes:
      - ${APP_DATA_DIR}/data/redis:/data
    networks:
      - tipi_main_network
      
  authentik:
    container_name: authentik
    image: ghcr.io/goauthentik/server:2023.4.1
    restart: unless-stopped
    command: server
    environment:
      - AUTHENTIK_REDIS__HOST=redis
      - AUTHENTIK_POSTGRESQL__HOST=postgresql
      - AUTHENTIK_POSTGRESQL__USER=authentik
      - AUTHENTIK_POSTGRESQL__NAME=authentik
      - AUTHENTIK_POSTGRESQL__PASSWORD=${POSTGRES_PASSWORD}
      - AUTHENTIK_SECRET_KEY=${AUTHENTIK_SECRET_KEY}
    volumes:
      - ${APP_DATA_DIR}/data/media:/media
      - ${APP_DATA_DIR}/data/templates:/templates
    ports:
      - ${APP_PORT}:9000
    # - "${COMPOSE_PORT_HTTPS:-9443}:9443"
    networks:
      - tipi_main_network
    labels:
      traefik.enable: ${APP_EXPOSED}
      traefik.http.routers.authentik.rule: Host(`${APP_DOMAIN}`)
      traefik.http.routers.authentik.entrypoints: websecure
      traefik.http.routers.authentik.service: authentik
      traefik.http.routers.authentik.tls.certresolver: myresolver
      traefik.http.services.authentik.loadbalancer.server.port: 9000
      
  worker:
    image: ghcr.io/goauthentik/server:2023.4.1
    restart: unless-stopped
    command: worker
    environment:
      - AUTHENTIK_REDIS__HOST: redis
      - AUTHENTIK_POSTGRESQL__HOST=postgresql
      - AUTHENTIK_POSTGRESQL__USER=authentik
      - AUTHENTIK_POSTGRESQL__NAME=authentik
      - AUTHENTIK_POSTGRESQL__PASSWORD=${POSTGRES_PASSWORD}
      - AUTHENTIK_SECRET_KEY=${AUTHENTIK_SECRET_KEY}
    # `user: root` and the docker socket volume are optional.
    # See more for the docker socket integration here:
    # https://goauthentik.io/docs/outposts/integrations/docker
    # Removing `user: root` also prevents the worker from fixing the permissions
    # on the mounted folders, so when removing this make sure the folders have the correct UID/GID
    # (1000:1000 by default)
    networks:
      - tipi_main_network
    user: root
    volumes:
      - ${APP_DATA_DIR}/data/media:/media
      - ${APP_DATA_DIR}/data/templates:/templates
      - /var/run/docker.sock:/var/run/docker.sock
      - ${APP_DATA_DIR}/data/certs:/certs

